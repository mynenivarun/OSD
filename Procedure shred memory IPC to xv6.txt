Step 1:
$git clone https://github.com/hayleejane3/shared-memory-xv6
Step 2:
$cd shared-memory-xv6
Step 3:
 $ls
Step 4:
$vi Makefile
Delete following code from Makefile (line 54 to 72
# If the makefile can't find QEMU, specify its path here
#QEMU :=
# Try to infer the correct QEMU if not specified
ifndef QEMU
QEMU := $(shell if which qemu 1> /dev/null 2> /dev/null; \
 then echo qemu; exit; \
 else \
 qemu=/u/c/s/cs537-2/ta/tools/qemu; \
 if test -x $$qemu; then echo $$qemu; exit; fi; fi; \
 echo "***" 1>&2; \
 echo "*** Error: Couldn't find a working QEMU executable." 1>&2; \
 echo "*** Is the directory containing the qemu binary in your " 
1>&2; \
 echo "*** PATH or have you tried setting the QEMU variable in " 
1>&2; \
 echo "*** Makefile?" 1>&2; \
 echo "***" 1>&2; exit 1)
endif
Add the following code inplace of above code
# QEMU = qemu-system-i386
# Try to infer the correct QEMU
ifndef QEMU
QEMU = $(shell if which qemu > /dev/null; \
 then echo qemu; exit; \
 elif which qemu-system-i386 > /dev/null; \
 then echo qemu-system-i386; exit; \
 elif which qemu-system-x86_64 > /dev/null; \
 then echo qemu-system-x86_64; exit; \
 else \
 qemu=/Applications/Q.app/Contents/MacOS/i386-
softmmu.app/Contents/MacOS/i386-softmmu; \
 if test -x $$qemu; then echo $$qemu; exit; fi; fi; \
 echo "***" 1>&2; \
 echo "*** Error: Couldn't find a working QEMU executable." 1>&2; \
 echo "*** Is the directory containing the qemu binary in your PATH" 
1>&2; \
 echo "*** or have you tried setting the QEMU variable in Makefile?" 
1>&2; \
 echo "***" 1>&2; exit 1)
endif
Step 5:
$cd user
Step 6:
$ls
Step 7:
$vi test_shm.c
Step 8:
$vi makefile.mk
////add test_shm after zombie in USER_PROGS list of makefile.mk
Step 9:
 $cd ..
Step 10:
$make qemu-nox
$ls
$test_sh
